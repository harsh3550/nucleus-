checker

<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@page import="com.productapp.model.dao.entities.CustomersTemp"%>

<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<html>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.18/css/jquery.dataTables.css"/>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.js"></script>

  <script>
  $(document).ready( function () {
      $('#myTable').DataTable();
  } );
  </script>
<head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<br>
<br>
<a href="/demoFinal"><button class="btn btn-secondary">Home</button></a>
<div style="margin-top:10px">
<c:url var="logout" value="/logout"></c:url>
<form:form action="${logout }"  method ="post">
<div ><class="btn btn-primary" input type="submit" value="logout">
<div><button input type="submit" value="logout" class="btn btn-primary">Logout</button></a></div>
</form:form>
</div>
</div>
</div>
<br>
<br>
<br>

<table id="myTable" border=1>
    <thead>
    <tr>
        <th>Customer Code</th>
        <th>Name</th>
        <th>Address1</th>
        <th>Address2</th>
        <th>Email</th>
        <th>ContactNumber</th>
        <th>PrimaryContactPerson</th>
        <th>RecordStatus</th>
        <th>CreatedBy</th>
        <th>CreatedDate</th>
        <th>ModifiedDate</th>
        <th>ModifiedBy</th>

        <th>Approve</th>
        <th>Reject</th>

    </tr>
    </thead>
    <tbody>
    <c:forEach items="${newRegisterCustomerList}" var="customer">
        <tr>
            <td>${customer.customerCode} </td>
            <td>${customer.customerName}</td>
            <td>${customer.address1}</td>
            <td>${customer.address2}</td>
            <td>${customer.email}</td>
            <td>${customer.contactNumber}</td>
            <td>${customer.primaryContactPerson}</td>
            <td>${customer.recordStatus}</td>
            <td>${customer.createdBy}</td>
            <td>${customer.createDate}</td>
            <td>${customer.modifiedDate}</td>
            <td>${customer.modifiedBy}</td>

            <td><a href="approveCustomer?cid=<c:out value="${customer.cid}"/>&status=<c:out value="${customer.recordStatus}"/>"><button class="btn btn-secondary">Approve</button></a></td>
            <td><a href="rejectCustomer?cid=<c:out value="${customer.cid}"/>&status=<c:out value="${customer.recordStatus}"/>"><button class="btn btn-secondary">Reject</button></a></td>
        </tr>
    </c:forEach>
    </tbody>
</table>
</head>
</html>













maker
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@page import="com.productapp.model.dao.entities.CustomersTemp"%>

<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<html>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.18/css/jquery.dataTables.css"/>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.js"></script>

  <script>
  $(document).ready( function () {
      $('#myTable').DataTable();
  } );

  $(document).ready( function () {
        $('#myTable1').DataTable();
    } );
  </script>
<head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<br>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<br>
<div class="container">
<div class="row">
<div class="col-sm-10"><a href="addCustomer"><button class="btn btn-secondary">Add new customer</button></a></div>
<div class="col-sm-1"><a href="/demoFinal"><button class="btn btn-secondary">Home</button></a></div>
<br>
<div style="margin-top:10px">

<c:url var="logout" value="/logout"></c:url>
<form:form action="${logout }"  method ="post">
<div ><class="btn btn-primary" input type="submit" value="logout">
<div class="col-sm-1"><button input type="submit" value="logout" class="btn btn-primary">Logout</button></a></div>
</form:form>

</div>
</div>
</div>

<br>
<br>

<br>
<br>
<table id="myTable" border=1>
    <thead>
    <tr>

        <th>Customer Code</th>
        <th>Name</th>
        <th>Address1</th>
        <th>Address2</th>
        <th>Email</th>
        <th>ContactNumber</th>
        <th>PrimaryContactPerson</th>
        <th>RecordStatus</th>
        <th>CreatedBy</th>
        <th>CreatedDate</th>
        <th>ModifiedBy</th>
        <th>ModifiedDate</th>
        <th>AuthorizedBy</th>
        <th>AuthorizedDate</th>
        <th>update</th>
        <th>delete</th>

    </tr>
    </thead>


    <tbody>
    <c:forEach items="${ListOfCustomerFromTempTable}" var="customer">
        <tr>


            <td>${customer.customerCode} </td>
            <td>${customer.customerName}</td>
            <td>${customer.address1}</td>
            <td>${customer.address2}</td>
            <td>${customer.email}</td>
            <td>${customer.contactNumber}</td>
            <td>${customer.primaryContactPerson}</td>
            <td>${customer.recordStatus}</td>
            <td>${customer.createdBy}</td>
            <td>${customer.createDate}</td>
            <td>${customer.modifiedDate}</td>
            <td>${customer.modifiedBy}</td>
            <td>${customer.authorizedDate}</td>
            <td>${customer.authorizedBy}</td>

            <td><a href="updateCustomer?cid=${customer.cid}"><button class="btn btn-secondary">Update</button></a></td>
            <td><a href="deleteCustomer?cid=${customer.cid}"><button class="btn btn-secondary">Delete</button></a></td>

        </tr>
    </c:forEach>
    <c:forEach items="${ListOfCustomerFromMasterTable}" var="customer">
            <tr>

                <td>${customer.customerCode} </td>
                <td>${customer.customerName}</td>
                <td>${customer.address1}</td>
                <td>${customer.address2}</td>
                <td>${customer.email}</td>
                <td>${customer.contactNumber}</td>
                <td>${customer.primaryContactPerson}</td>
                <td>${customer.recordStatus}</td>
                <td>${customer.createdBy}</td>
                <td>${customer.createDate}</td>
                <td>${customer.modifiedDate}</td>
                <td>${customer.modifiedBy}</td>
                <td>${customer.authorizedDate}</td>
                <td>${customer.authorizedBy}</td>

                <td><a href="updateCustomerMaster?cid=${customer.cid}"><button class="btn btn-secondary">Update</button></a></td>
                <td><a href="deleteCustomerMaster?cid=${customer.cid}"><button class="btn btn-secondary">Delete</button></a></td>

            </tr>
        </c:forEach>
    </tbody>
</table>


</head>
</html>


























<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        form {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f5f5f5;
            font-weight: normal;
        }

        input[type="text"], input[type="number"], input[type="email"], select, textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        input[type="submit"] {
            background-color: #007bff;
            color: #fff;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 10px;
        }

        input[type="submit"]:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <h1>Registration Form</h1>
    <form method="post" action="register.jsp">
        <table>
            <tr>
                <th>Customer Code:</th>
                <td><input type="text" name="customerCode" size="10" maxlength="10" required></td>
            </tr>
            <tr>
                <th>Customer Name:</th>
                <td><input type="text" name="customerName" size="30" maxlength="30" required pattern="[a-zA-Z0-9\s]+"></td>
            </tr>
            <tr>
                <th>Customer Address 1:</th>
                <td><textarea name="customerAddress1" rows="3" cols="30" required></textarea></td>
            </tr>
            <tr>
                <th>Customer Address 2:</th>
                <td><textarea name="customerAddress2" rows="3" cols="30"></textarea></td>
            </tr>
            <tr>
                <th>Customer Pin Code:</th>
                <td><input type="number" name="customerPinCode" size="6" min="100000" required></td>
            </tr>
            <tr>
                <th>E-mail address:</th>
                <td><input type="email" name="email" size="100" required></td>
            </tr>
            <tr>
                <th>Contact Number:</th>
                <td><input type="text" name="contactNumber" size="20"></td>
            </tr>
            <tr>
                <th>Primary Contact Person:</th>
                <td><
















RegistrationForm.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
</head>
<body>
    <h1>Registration Form</h1>
    <form method="post" action="register.jsp">
        <table>
            <tr>
                <td>Customer Code:</td>
                <td><input type="text" name="customerCode" size="10" maxlength="10" required></td>
            </tr>
            <tr>
                <td>Customer Name:</td>
                <td><input type="text" name="customerName" size="30" maxlength="30" required pattern="[a-zA-Z0-9\s]+"></td>
            </tr>
            <tr>
                <td>Customer Address 1:</td>
                <td><textarea name="customerAddress1" rows="3" cols="30" required></textarea></td>
            </tr>
            <tr>
                <td>Customer Address 2:</td>
                <td><textarea name="customerAddress2" rows="3" cols="30"></textarea></td>
            </tr>
            <tr>
                <td>Customer Pin Code:</td>
                <td><input type="number" name="customerPinCode" size="6" min="100000" required></td>
            </tr>
            <tr>
                <td>E-mail address:</td>
                <td><input type="email" name="email" size="100" required></td>
            </tr>
            <tr>
                <td>Contact Number:</td>
                <td><input type="text" name="contactNumber" size="20"></td>
            </tr>
            <tr>
                <td>Primary Contact Person:</td>
                <td><input type="text" name="primaryContactPerson" size="100" required></td>
            </tr>
            <tr>
                <td>Record Status:</td>
                <td>
                    <select name="recordStatus" required>
                        <option value="N">New</option>
                        <option value="M">Modified</option>
                        <option value="D">Deleted</option>
                        <option value="A">Authorized</option>
                        <option value="R">Rejected</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>Active/Inactive Flag:</td>
                <td>
                    <select name="activeInactiveFlag" required>
                        <option value="A">Active</option>
                        <option value="I">Inactive</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" value="Register">
                </td>
            </tr>
        </table>
    </form>
</body>
</html>













<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Registration Form</title>
</head>
<body>
    <h1>Registration Form</h1>
    <form method="post" action="register.jsp">
        <table>
            <tr>
                <td>Customer ID Number:</td>
                <td><input type="text" name="customerId" size="10" disabled></td>
            </tr>
            <tr>
                <td>Customer Code:</td>
                <td><input type="text" name="customerCode" size="10" maxlength="10" required></td>
            </tr>
            <tr>
                <td>Customer Name:</td>
                <td><input type="text" name="customerName" size="30" maxlength="30" required pattern="[a-zA-Z0-9\s]+"></td>
            </tr>
            <tr>
                <td>Customer Address 1:</td>
                <td><textarea name="customerAddress1" rows="3" cols="30" required></textarea></td>
            </tr>
            <tr>
                <td>Customer Address 2:</td>
                <td><textarea name="customerAddress2" rows="3" cols="30"></textarea></td>
            </tr>
            <tr>
                <td>Customer Pin Code:</td>
                <td><input type="number" name="customerPinCode" size="6" min="100000" required></td>
            </tr>
            <tr>
                <td>E-mail address:</td>
                <td><input type="email" name="email" size="100" required></td>
            </tr>
            <tr>
                <td>Contact Number:</td>
                <td><input type="text" name="contactNumber" size="20"></td>
            </tr>
            <tr>
                <td>Primary Contact Person:</td>
                <td><input type="text" name="primaryContactPerson" size="100" required></td>
            </tr>
            <tr>
                <td>Record Status:</td>
                <td>
                    <select name="recordStatus" required>
                        <option value="N">New</option>
                        <option value="M">Modified</option>
                        <option value="D">Deleted</option>
                        <option value="A">Authorized</option>
                        <option value="R">Rejected</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>Active/Inactive Flag:</td>
                <td>
                    <select name="activeInactiveFlag" required>
                        <option value="A">Active</option>
                        <option value="I">Inactive</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" name="action" value="Add">
                    <input type="submit" name="action" value="Update">
                    <input type="submit" name="action" value="Delete">
                    <input type="submit" name="action" value="Save">
                </td>
            </tr>
        </table>
    </form>
</body>
</html>















<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>My Web Application</title>
</head>
<body>
    <h1>Welcome to My Web Application</h1>
    <jsp:include page="register.jsp" />
</body>
</html>




<form method="post" action="registerServlet">
    <!-- registration form fields go here -->
</form>



In this example, the form action points to a servlet named registerServlet which will handle the form submission and perform the necessary processing.

Note: Make sure to update the form action and other URLs in the registration form code to match the actual URLs of your web application, and configure the appropriate servlet mappings in your web application's web.xml file if necessary.

With these changes, you should be able to run your web application and access the registration form through the index.jsp page.








<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Checker Form</title>
</head>
<body>
    <h1>Checker Form</h1>
    <form method="post" action="checkerServlet">
        <table>
            <tr>
                <th>Customer ID</th>
                <th>Customer Code</th>
                <th>Customer Name</th>
                <th>Customer Address 1</th>
                <th>Customer Address 2</th>
                <th>Customer Pin Code</th>
                <th>E-mail Address</th>
                <th>Contact Number</th>
                <th>Primary Contact Person</th>
                <th>Record Status</th>
                <th>Action</th>
            </tr>
            <tr>
                <td>1</td>
                <td>C001</td>
                <td>John Doe</td>
                <td>123 Main St</td>
                <td></td>
                <td>123456</td>
                <td>john.doe@example.com</td>
                <td>123-456-7890</td>
                <td>John</td>
                <td>N</td>
                <td>
                    <select name="status1">
                        <option value="approve">Approve</option>
                        <option value="reject">Reject</option>
                    </select>
                </td>
            </tr>
            <!-- Add more rows for each customer -->
        </table>
        <input type="submit" value="Submit">
    </form>
</body>
</html>












<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h1>Login Page</h1>
    <form action="/login" method="post">
        <label for="username">User Name:</label>
        <input type="text" id="username" name="username" required><br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>







@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {
    
    @Autowired
    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {
        // Configure authentication for first login path ("/login1")
        auth.inMemoryAuthentication()
            .withUser("user1")
            .password("{noop}password1") // Use "{noop}" prefix for plain text password
            .roles("USER");
        
        // Configure authentication for second login path ("/login2")
        auth.inMemoryAuthentication()
            .withUser("user2")
            .password("{noop}password2") // Use "{noop}" prefix for plain text password
            .roles("USER");
    }
    
    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http
            .authorizeRequests()
                .antMatchers("/login1").permitAll() // Allow access to first login path without authentication
                .antMatchers("/login2").permitAll() // Allow access to second login path without authentication
                .anyRequest().authenticated() // Require authentication for all other requests
                .and()
            .formLogin()
                .loginPage("/login1") // Use first login path as login page
                .loginProcessingUrl("/login1") // Use first login path for login processing
                .and()
            .formLogin()
                .loginPage("/login2") // Use second login path as login page
                .loginProcessingUrl("/login2"); // Use second login path for login processing
    }
}






@Entity
@Table(name = "customers")
public class Customer {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "customer_id")
    private Long customerId;
    
    @Column(name = "customer_code")
    private String customerCode;
    
    @Column(name = "customer_name")
    private String customerName;
    
    @Column(name = "customer_address1")
    private String customerAddress1;
    
    @Column(name = "customer_address2")
    private String customerAddress2;
    
    @Column(name = "customer_pincode")
    private String customerPincode;
    
    @Column(name = "email_address")
    private String emailAddress;
    
    @Column(name = "contact_number")
    private String contactNumber;
    
    @Column(name = "primary_contact_person")
    private String primaryContactPerson;
    
    @Column(name = "record_status")
    private String recordStatus;
    
    @Column(name = "active_inactive_flag")
    private String activeInactiveFlag;
    
    @Column(name = "create_date")
    private Date createDate;
    
    @Column(name = "created_by")
    private String createdBy;
    
    @Column(name = "modified_date")
    private Date modifiedDate;
    
    @Column(name = "modified_by")
    private String modifiedBy;
    
    @Column(name = "authorized_date")
    private Date authorizedDate;
    
    @Column(name = "authorized_by")
    private String authorizedBy;
    
    // Getters and Setters
    // ...
}









Create a JSP form page (customerForm.jsp) to capture customer data:

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<!DOCTYPE html>
<html>
<head>
    <title>Customer Form</title>
</head>
<body>
    <h1>Customer Form</h1>
    <form action="/saveCustomer" method="post">
        <label for="customerCode">Customer Code:</label>
        <input type="text" id="customerCode" name="customerCode" required><br><br>
        <label for="customerName">Customer Name:</label>
        <input type="text" id="customerName" name="customerName" required pattern="[a-zA-Z0-9]+" title="Only letters and digits are allowed"><br><br>
        <label for="customerAddress1">Customer Address 1:</label>
        <textarea id="customerAddress1" name="customerAddress1" required></textarea><br><br>
        <label for="customerAddress2">Customer Address 2:</label>
        <textarea id="customerAddress2" name="customerAddress2"></textarea><br><br>
        <label for="customerPincode">Customer Pincode:</label>
        <input type="number" id="customerPincode" name="customerPincode" required min="100000" max="999999"><br><br>
        <label for="emailAddress">E-mail Address:</label>
        <input type="email" id="emailAddress" name="emailAddress" required><br><br>
        <label for="contactNumber">Contact Number:</label>
        <input type="text" id="contactNumber" name="contactNumber"><br><br>
        <label for="primaryContactPerson">Primary Contact Person:</label>
<input type="text" id="primaryContactPerson" name="primaryContactPerson" required><br><br>
<label for="recordStatus">Record Status:</label>
<select id="recordStatus" name="recordStatus" required>
    <option value="N">New</option>
    <option value="M">Modified</option>
    <option value="D">Deleted</option>
    <option value="A">Authorized</option>
    <option value="R">Rejected</option>
</select><br><br>
<label for="activeInactiveFlag">Active/Inactive Flag:</label>
<select id="activeInactiveFlag" name="activeInactiveFlag" required>
    <option value="A">Active</option>
    <option value="I">Inactive</option>
</select><br><br>
<input type="submit" value="Save">
</form>
</body>
</html>





Controller to handle form submission and saving data to the database
@Controller
public class CustomerController {
    @Autowired
    private CustomerService customerService;

    @PostMapping("/saveCustomer")
    public String saveCustomer(@ModelAttribute("customer") Customer customer) {
        customerService.saveCustomer(customer);
        return "redirect:/customerList";
    }
}



Service layer to handle business logic

@Service
public class CustomerService {
    @Autowired
    private CustomerRepository customerRepository;

    public void saveCustomer(Customer customer) {
        customerRepository.save(customer);
    }
}


Repository to handle database operations

@Repository
public interface CustomerRepository extends JpaRepository<Customer, Long> {
}




</select><br><br>
<input type="submit" value="Submit">
<input type="reset" value="Reset">
</form>
</body>
</html>

This JSP form page captures the customer data using various form fields such as text input, text area, number input, and select drop-down. The form has the "action" attribute set to "/saveCustomer" which indicates that the form data will be submitted to a servlet or controller mapped to "/saveCustomer" URL for further processing.

Next, you can create a Spring MVC controller to handle the form submission and save the data to the database using Hibernate.



@Controller
public class CustomerController {
    
    @Autowired
    private CustomerService customerService;
    
    @PostMapping("/saveCustomer")
    public String saveCustomer(@ModelAttribute("customer") Customer customer, Model model) {
        // Call the service layer to save the customer data
        customerService.saveCustomer(customer);
        model.addAttribute("message", "Customer saved successfully!");
        return "customerForm"; // Return the view name for the customer form
    }
    
    // Other controller methods
    // ...
}




In the above code, we use the @Controller annotation to mark the class as a Spring MVC controller. The saveCustomer method is mapped to the "/saveCustomer" URL and is annotated with @PostMapping to handle POST requests from the customer form submission. The @ModelAttribute annotation is used to bind the form data to the Customer object. The customerService is injected using @Autowired to call the service layer for saving the customer data.

Finally, you can create a service layer using Spring's @Service annotation to handle the business logic and use Hibernate to save the customer data to the database.



@Service
public class CustomerService {
    
    @Autowired
    private CustomerRepository customerRepository;
    
    @Transactional
    public void saveCustomer(Customer customer) {
        // Set default values for createDate and createdBy
        customer.setCreateDate(new Date());
        customer.setCreatedBy("logged_in_user_id");
        // Call the repository to save the customer data
        customerRepository.save(customer);
    }
    
    // Other service methods
    // ...
}





In the above code, we use the @Service annotation to mark the class as a Spring service. The saveCustomer method is annotated with @Transactional to enable transaction management. Inside the method, you can set default values for fields such as createDate and createdBy before calling the customerRepository.save() method to save the customer data to the database.

Note: You will need to configure Hibernate and the database connection in your Spring application context or configuration files. This includes setting up the data source, session factory, and transaction manager. Additionally, you will need to define a CustomerRepository interface that extends JpaRepository or any other appropriate Spring Data repository interface for CRUD operations on the Customer entity.
